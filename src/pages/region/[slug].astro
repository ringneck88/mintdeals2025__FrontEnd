---
import Layout from '../../layouts/Layout.astro';

const API_BASE = 'https://mintdealsbackend-production.up.railway.app/api';
const { slug } = Astro.params;

// Helper function to safely extract string values
const getStringValue = (value, fallback = '') => {
  return typeof value === 'string' ? value : fallback;
};

// Fetch region data with stores
let region: any = null;
let stores: any[] = [];

try {
  // First, try to find region by slug with deep population
  const regionResponse = await fetch(`${API_BASE}/regions?filters[slug][$eq]=${slug}&populate[stores][populate][0]=address&populate[stores][populate][1]=region&populate[stores][populate][2]=hours&populate[image][populate]=*&pagination[pageSize]=100`);
  let regionData = await regionResponse.json();

  // If no region found by slug, try by name
  if (!regionData?.data || regionData.data.length === 0) {
    const nameToSearch = slug.replace(/-/g, ' ');
    const regionByNameResponse = await fetch(`${API_BASE}/regions?filters[name][$eqi]=${encodeURIComponent(nameToSearch)}&populate[stores][populate][0]=address&populate[stores][populate][1]=region&populate[stores][populate][2]=hours&populate[image][populate]=*&pagination[pageSize]=100`);
    regionData = await regionByNameResponse.json();
  }

  if (regionData?.data && regionData.data.length > 0) {
    region = regionData.data[0];
    stores = region.stores || [];
    console.log(`‚úÖ Region ${region.name}: ${stores.length} stores found`);
    console.log(`üñºÔ∏è Image data:`, JSON.stringify(region.image, null, 2));
  }
} catch (error) {
  console.error('Error fetching region data:', error);
}

const regionName = region?.name || region?.Name || slug.replace(/-/g, ' ').replace(/\b\w/g, (l: string) => l.toUpperCase());
const regionDescription = region?.description || region?.Description || 'Discover premium cannabis dispensaries and products in the ' + regionName + ' area. Our trusted retail partners offer a carefully curated selection of high-quality cannabis products, expert guidance, and exceptional customer service. Whether you\'re a seasoned enthusiast or new to cannabis, you\'ll find knowledgeable staff ready to help you find the perfect products for your needs. Explore our locations to experience the best cannabis retail has to offer in ' + regionName + '.';

// Helper function to get image URL (same as used on home page)
function getImageUrl(imageData: any) {
  if (!imageData || imageData === null) return null;

  // Case 1: Strapi v4 nested structure: image.data.attributes.url
  if (imageData?.data?.attributes?.url) {
    const url = imageData.data.attributes.url;
    return url.startsWith('http') ? url : `https://mintdealsbackend-production.up.railway.app${url}`;
  }

  // Case 2: Direct image object with formats (Cloudinary or Strapi uploaded images)
  if (typeof imageData === 'object' && imageData.formats) {
    // Prefer larger formats for better quality
    if (imageData.formats.large?.url) return imageData.formats.large.url;
    if (imageData.formats.medium?.url) return imageData.formats.medium.url;
    if (imageData.formats.small?.url) return imageData.formats.small.url;
    if (imageData.formats.thumbnail?.url) return imageData.formats.thumbnail.url;
  }

  // Case 3: Direct image object with url: image.url
  if (typeof imageData === 'object' && imageData.url) {
    const url = imageData.url;
    return url.startsWith('http') ? url : `https://mintdealsbackend-production.up.railway.app${url}`;
  }

  // Case 4: String URL directly
  if (typeof imageData === 'string') {
    return imageData.startsWith('http') ? imageData : `https://mintdealsbackend-production.up.railway.app${imageData}`;
  }

  return null;
}

// Try multiple possible image field names (matching home page logic)
const regionImageUrl = getImageUrl(region?.image)
  || getImageUrl(region?.Image)
  || getImageUrl(region?.IMAGE)
  || null;
---

<style>
  body {
    margin: 0;
    padding: 0;
  }
  .video-background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    overflow: hidden;
  }
  .video-background::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: linear-gradient(to top,  rgba(41, 163, 41, 0.35), rgba(51, 204, 51, 0.3), rgba(92, 214, 92, 0.25), rgba(133, 224, 133, 0.2), rgba(194, 240, 194, 0.15), rgba(235, 250, 235, 0.1), rgba(255, 255, 255, 0.08), rgba(255, 255, 255, 0.06), rgba(255, 255, 255, 0.04), rgba(255, 255, 255, 0.02));
    mix-blend-mode: color;
    pointer-events: none;
    z-index: 1;
  }
  .video-background video {
    object-fit: cover;
    height: 100%;
    width: 100%;
  }
  .content-wrapper {
    position: relative;
    z-index: 1;
    background: linear-gradient(to bottom, rgba(0,0,0,0.2), rgba(0,0,0,0.4));
  }
  .hero-section {
    min-height: 7.5vh;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0.5rem 0;
  }

  @media (min-width: 768px) {
    .hero-section {
      min-height: 30vh;
      padding: 1rem 0;
    }
  }
</style>

<Layout title={`${regionName} - Store Locations`} description={`Find Mint Cannabis dispensaries in ${regionName}`}>
  <!-- Video Background -->
  <div class="video-background">
    <video autoplay loop muted playsinline>
      <source src="https://video.wixstatic.com/video/d47472_58cce06729c54ccb935886c4b3647274/1080p/mp4/file.mp4" type="video/mp4">
    </video>
  </div>

  <!-- Content Wrapper -->
  <div class="content-wrapper">
    <!-- Hero Section -->
    <section class="relative py-16 text-white">
      <div class="absolute inset-0 bg-black opacity-40"></div>
      <div class="relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <!-- Breadcrumb -->
        <nav class="mb-8 text-sm">
          <div class="flex items-center space-x-2">
            <a href="/" class="text-yellow-400 hover:text-yellow-300">Home</a>
            <span class="text-green-300">/</span>
            <a href="/regions" class="text-yellow-400 hover:text-yellow-300">Regions</a>
            <span class="text-green-300">/</span>
            <span class="text-white">{regionName}</span>
          </div>
        </nav>

        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
          <!-- Region Image -->
          <div class="lg:col-span-1">
            {regionImageUrl ? (
              <img
                src={regionImageUrl}
                alt={regionName}
                class="w-full h-64 lg:h-80 object-cover rounded-lg shadow-xl border-4 border-yellow-400"
              />
            ) : (
              <div class="w-full h-64 lg:h-80 bg-gradient-to-br from-green-900 to-green-800 rounded-lg shadow-xl border-4 border-yellow-400 flex items-center justify-center">
                <span class="text-8xl">üìç</span>
              </div>
            )}
          </div>

          <!-- Region Info -->
          <div class="lg:col-span-2">
            <h1 class="text-4xl md:text-5xl font-bold mb-4">
              <span class="inline-block pb-2 leading-tight bg-gradient-to-r from-yellow-400 to-orange-500 bg-clip-text text-transparent" style="padding-bottom: 0.5rem;">
                üìç {regionName}
              </span>
            </h1>

            {regionDescription && (
              <p class="text-lg text-green-100 mb-6 leading-relaxed">
                {regionDescription}
              </p>
            )}

            <div class="flex flex-wrap gap-4">
              <div class="inline-flex items-center px-6 py-3 text-base font-semibold text-white bg-gradient-to-r from-green-600 to-green-700 rounded-lg shadow-lg">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"/>
                </svg>
                {stores.length} Location{stores.length !== 1 ? 's' : ''}
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Main Content -->
    <div class="bg-black py-16">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">

        <!-- About This Region Section -->
        {regionDescription && (
          <div class="mb-12 bg-gradient-to-br from-green-900/40 to-black/60 rounded-lg shadow-xl p-8 border-2 border-green-500">
            <h2 class="text-3xl font-bold mb-6 flex items-center">
              <svg class="w-8 h-8 mr-3 text-yellow-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
              </svg>
              <span class="inline-block pb-2 leading-tight bg-gradient-to-r from-yellow-400 to-orange-500 bg-clip-text text-transparent" style="padding-bottom: 0.35rem;">About {regionName}</span>
            </h2>
            <p class="text-green-100 text-lg leading-relaxed">
              {regionDescription}
            </p>
          </div>
        )}

        <!-- Stores Section -->
        {stores.length > 0 ? (
          <div>
            <div class="mb-8">
              <h2 class="text-3xl font-bold flex items-center">
                <svg class="w-8 h-8 mr-3 text-yellow-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"/>
                </svg>
                <span class="inline-block pb-2 leading-tight bg-gradient-to-r from-yellow-400 to-orange-500 bg-clip-text text-transparent" style="padding-bottom: 0.35rem;">
                  {stores.length} Location{stores.length !== 1 ? 's' : ''} in {regionName}
                </span>
              </h2>
            </div>

            <div class="grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-3 xl:gap-8">
              {stores.map((store: any) => {
                const storeImage = getImageUrl(store.image) || getImageUrl(store.Image);
                return (
                  <div class="overflow-hidden transition-all transform bg-black border-2 border-green-500 rounded-lg shadow-lg hover:shadow-2xl hover:border-yellow-400 hover:scale-105">
                    {storeImage && (
                      <img
                        src={storeImage}
                        alt={store.name}
                        class="object-cover w-full h-48"
                      />
                    )}
                    <div class="p-6">
                      <h3 class="mb-2 text-xl font-bold">
                        <span class="inline-block pb-1 leading-tight bg-gradient-to-r from-yellow-400 to-orange-500 bg-clip-text text-transparent" style="padding-bottom: 0.25rem;">
                          {store.name}
                        </span>
                      </h3>
                      {store.address && (
                        <p class="flex items-start mb-4 text-green-300">
                          <svg class="w-5 h-5 mr-2 mt-0.5 text-green-600 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"/>
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"/>
                          </svg>
                          {getStringValue(store.address?.city) || getStringValue(store.city) || 'Unknown City'}, {getStringValue(store.address?.state) || getStringValue(store.state) || 'Unknown State'}
                        </p>
                      )}
                      {store.phone && (
                        <p class="flex items-center mb-4 text-green-300">
                          <svg class="w-5 h-5 mr-2 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"/>
                          </svg>
                          {store.phone}
                        </p>
                      )}
                      <a href={`/location/${store.slug}`} class="inline-flex items-center font-medium text-yellow-400 hover:text-yellow-300">
                        View Details
                        <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                        </svg>
                      </a>
                    </div>
                  </div>
                );
              })}
            </div>
          </div>
        ) : (
          <div class="py-12 text-center">
            <div class="max-w-md p-8 mx-auto bg-black border-2 border-green-500 rounded-lg">
              <div class="mb-4 text-6xl">üìç</div>
              <h3 class="mb-2 text-lg font-medium text-yellow-400">No Locations Found</h3>
              <p class="text-green-300">No stores found in this region yet.</p>
            </div>
          </div>
        )}

        <!-- Back Button -->
        <div class="mt-12 text-center">
          <a href="/regions" class="inline-flex items-center px-6 py-3 font-medium text-white transition-all transform rounded-lg shadow-lg bg-gradient-to-r from-yellow-400 to-transparent hover:from-yellow-500 hover:to-transparent hover:scale-105">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"/>
            </svg>
            Back to All Regions
          </a>
        </div>
      </div>
    </div>
  </div>
</Layout>
